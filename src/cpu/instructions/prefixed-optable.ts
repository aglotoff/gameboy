import { Register } from "../register";

import {
  resetBitInIndirectHL,
  resetBitInRegister,
  rotateIndirectHLLeft,
  rotateRegisterLeft,
  rotateIndirectHLLeftThroughCarry,
  rotateRegisterLeftThroughCarry,
  rotateIndirectHLRight,
  rotateRegisterRight,
  rotateIndirectHLRightThroughCarry,
  rotateRegisterRightThroughCarry,
  setBitInIndirectHL,
  setBitInRegister,
  shiftLeftArithmeticallyIndirectHL,
  shiftLeftArithmeticallyRegister,
  shiftRightArithmeticallyIndirectHL,
  shiftRightArithmeticallyRegister,
  shiftRightLogicallyIndirectHL,
  shiftRightLogicallyRegister,
  swapNibblesInIndirectHL,
  swapNibblesInRegister,
  testBitInIndirectHL,
  testBitInRegister,
} from "./bitwise";
import { bindInstructionArgs as bia, OpTable } from "./lib";

export function getPrefixCBInstruction(opcode: number) {
  return prefixCBInstructions[opcode];
}

const prefixCBInstructions: OpTable = {
  0x00: ["RLC B", bia(rotateRegisterLeft, Register.B)],
  0x01: ["RLC C", bia(rotateRegisterLeft, Register.C)],
  0x02: ["RLC D", bia(rotateRegisterLeft, Register.D)],
  0x03: ["RLC E", bia(rotateRegisterLeft, Register.E)],
  0x04: ["RLC H", bia(rotateRegisterLeft, Register.H)],
  0x05: ["RLC L", bia(rotateRegisterLeft, Register.L)],
  0x06: ["RLC (HL)", rotateIndirectHLLeft],
  0x07: ["RLC A", bia(rotateRegisterLeft, Register.A)],
  0x08: ["RRC B", bia(rotateRegisterRight, Register.B)],
  0x09: ["RRC C", bia(rotateRegisterRight, Register.C)],
  0x0a: ["RRC D", bia(rotateRegisterRight, Register.D)],
  0x0b: ["RRC E", bia(rotateRegisterRight, Register.E)],
  0x0c: ["RRC H", bia(rotateRegisterRight, Register.H)],
  0x0d: ["RRC L", bia(rotateRegisterRight, Register.L)],
  0x0e: ["RRC (HL)", rotateIndirectHLRight],
  0x0f: ["RRC A", bia(rotateRegisterRight, Register.A)],

  0x10: ["RL B", bia(rotateRegisterLeftThroughCarry, Register.B)],
  0x11: ["RL C", bia(rotateRegisterLeftThroughCarry, Register.C)],
  0x12: ["RL D", bia(rotateRegisterLeftThroughCarry, Register.D)],
  0x13: ["RL E", bia(rotateRegisterLeftThroughCarry, Register.E)],
  0x14: ["RL H", bia(rotateRegisterLeftThroughCarry, Register.H)],
  0x15: ["RL L", bia(rotateRegisterLeftThroughCarry, Register.L)],
  0x16: ["RL (HL)", rotateIndirectHLLeftThroughCarry],
  0x17: ["RL A", bia(rotateRegisterLeftThroughCarry, Register.A)],
  0x18: ["RR B", bia(rotateRegisterRightThroughCarry, Register.B)],
  0x19: ["RR C", bia(rotateRegisterRightThroughCarry, Register.C)],
  0x1a: ["RR D", bia(rotateRegisterRightThroughCarry, Register.D)],
  0x1b: ["RR E", bia(rotateRegisterRightThroughCarry, Register.E)],
  0x1c: ["RR H", bia(rotateRegisterRightThroughCarry, Register.H)],
  0x1d: ["RR L", bia(rotateRegisterRightThroughCarry, Register.L)],
  0x1e: ["RR (HL)", rotateIndirectHLRightThroughCarry],
  0x1f: ["RR A", bia(rotateRegisterRightThroughCarry, Register.A)],

  0x20: ["SLA B", bia(shiftLeftArithmeticallyRegister, Register.B)],
  0x21: ["SLA C", bia(shiftLeftArithmeticallyRegister, Register.C)],
  0x22: ["SLA D", bia(shiftLeftArithmeticallyRegister, Register.D)],
  0x23: ["SLA E", bia(shiftLeftArithmeticallyRegister, Register.E)],
  0x24: ["SLA H", bia(shiftLeftArithmeticallyRegister, Register.H)],
  0x25: ["SLA L", bia(shiftLeftArithmeticallyRegister, Register.L)],
  0x26: ["SLA (HL)", shiftLeftArithmeticallyIndirectHL],
  0x27: ["SLA A", bia(shiftLeftArithmeticallyRegister, Register.A)],
  0x28: ["SRA B", bia(shiftRightArithmeticallyRegister, Register.B)],
  0x29: ["SRA C", bia(shiftRightArithmeticallyRegister, Register.C)],
  0x2a: ["SRA D", bia(shiftRightArithmeticallyRegister, Register.D)],
  0x2b: ["SRA E", bia(shiftRightArithmeticallyRegister, Register.E)],
  0x2c: ["SRA H", bia(shiftRightArithmeticallyRegister, Register.H)],
  0x2d: ["SRA L", bia(shiftRightArithmeticallyRegister, Register.L)],
  0x2e: ["SRA (HL)", shiftRightArithmeticallyIndirectHL],
  0x2f: ["SRA A", bia(shiftRightArithmeticallyRegister, Register.A)],

  0x30: ["SWAP B", bia(swapNibblesInRegister, Register.B)],
  0x31: ["SWAP C", bia(swapNibblesInRegister, Register.C)],
  0x32: ["SWAP D", bia(swapNibblesInRegister, Register.D)],
  0x33: ["SWAP E", bia(swapNibblesInRegister, Register.E)],
  0x34: ["SWAP H", bia(swapNibblesInRegister, Register.H)],
  0x35: ["SWAP L", bia(swapNibblesInRegister, Register.L)],
  0x36: ["SWAP (HL)", swapNibblesInIndirectHL],
  0x37: ["SWAP A", bia(swapNibblesInRegister, Register.A)],
  0x38: ["SRL B", bia(shiftRightLogicallyRegister, Register.B)],
  0x39: ["SRL C", bia(shiftRightLogicallyRegister, Register.C)],
  0x3a: ["SRL D", bia(shiftRightLogicallyRegister, Register.D)],
  0x3b: ["SRL E", bia(shiftRightLogicallyRegister, Register.E)],
  0x3c: ["SRL H", bia(shiftRightLogicallyRegister, Register.H)],
  0x3d: ["SRL L", bia(shiftRightLogicallyRegister, Register.L)],
  0x3e: ["SRL (HL)", shiftRightLogicallyIndirectHL],
  0x3f: ["SRL A", bia(shiftRightLogicallyRegister, Register.A)],

  0x40: ["BIT 0,B", bia(testBitInRegister, 0, Register.B)],
  0x41: ["BIT 0,C", bia(testBitInRegister, 0, Register.C)],
  0x42: ["BIT 0,D", bia(testBitInRegister, 0, Register.D)],
  0x43: ["BIT 0,E", bia(testBitInRegister, 0, Register.E)],
  0x44: ["BIT 0,H", bia(testBitInRegister, 0, Register.H)],
  0x45: ["BIT 0,L", bia(testBitInRegister, 0, Register.L)],
  0x46: ["BIT 0,(HL)", bia(testBitInIndirectHL, 0)],
  0x47: ["BIT 0,A", bia(testBitInRegister, 0, Register.A)],
  0x48: ["BIT 1,B", bia(testBitInRegister, 1, Register.B)],
  0x49: ["BIT 1,C", bia(testBitInRegister, 1, Register.C)],
  0x4a: ["BIT 1,D", bia(testBitInRegister, 1, Register.D)],
  0x4b: ["BIT 1,E", bia(testBitInRegister, 1, Register.E)],
  0x4c: ["BIT 1,H", bia(testBitInRegister, 1, Register.H)],
  0x4d: ["BIT 1,L", bia(testBitInRegister, 1, Register.L)],
  0x4e: ["BIT 1,(HL)", bia(testBitInIndirectHL, 1)],
  0x4f: ["BIT 1,A", bia(testBitInRegister, 1, Register.A)],

  0x50: ["BIT 2,B", bia(testBitInRegister, 2, Register.B)],
  0x51: ["BIT 2,C", bia(testBitInRegister, 2, Register.C)],
  0x52: ["BIT 2,D", bia(testBitInRegister, 2, Register.D)],
  0x53: ["BIT 2,E", bia(testBitInRegister, 2, Register.E)],
  0x54: ["BIT 2,H", bia(testBitInRegister, 2, Register.H)],
  0x55: ["BIT 2,L", bia(testBitInRegister, 2, Register.L)],
  0x56: ["BIT 2,(HL)", bia(testBitInIndirectHL, 2)],
  0x57: ["BIT 2,A", bia(testBitInRegister, 2, Register.A)],
  0x58: ["BIT 3,B", bia(testBitInRegister, 3, Register.B)],
  0x59: ["BIT 3,C", bia(testBitInRegister, 3, Register.C)],
  0x5a: ["BIT 3,D", bia(testBitInRegister, 3, Register.D)],
  0x5b: ["BIT 3,E", bia(testBitInRegister, 3, Register.E)],
  0x5c: ["BIT 3,H", bia(testBitInRegister, 3, Register.H)],
  0x5d: ["BIT 3,L", bia(testBitInRegister, 3, Register.L)],
  0x5e: ["BIT 3,(HL)", bia(testBitInIndirectHL, 3)],
  0x5f: ["BIT 3,A", bia(testBitInRegister, 3, Register.A)],

  0x60: ["BIT 4,B", bia(testBitInRegister, 4, Register.B)],
  0x61: ["BIT 4,C", bia(testBitInRegister, 4, Register.C)],
  0x62: ["BIT 4,D", bia(testBitInRegister, 4, Register.D)],
  0x63: ["BIT 4,E", bia(testBitInRegister, 4, Register.E)],
  0x64: ["BIT 4,H", bia(testBitInRegister, 4, Register.H)],
  0x65: ["BIT 4,L", bia(testBitInRegister, 4, Register.L)],
  0x66: ["BIT 4,(HL)", bia(testBitInIndirectHL, 4)],
  0x67: ["BIT 4,A", bia(testBitInRegister, 4, Register.A)],
  0x68: ["BIT 5,B", bia(testBitInRegister, 5, Register.B)],
  0x69: ["BIT 5,C", bia(testBitInRegister, 5, Register.C)],
  0x6a: ["BIT 5,D", bia(testBitInRegister, 5, Register.D)],
  0x6b: ["BIT 5,E", bia(testBitInRegister, 5, Register.E)],
  0x6c: ["BIT 5,H", bia(testBitInRegister, 5, Register.H)],
  0x6d: ["BIT 5,L", bia(testBitInRegister, 5, Register.L)],
  0x6e: ["BIT 5,(HL)", bia(testBitInIndirectHL, 5)],
  0x6f: ["BIT 5,A", bia(testBitInRegister, 5, Register.A)],

  0x70: ["BIT 6,B", bia(testBitInRegister, 6, Register.B)],
  0x71: ["BIT 6,C", bia(testBitInRegister, 6, Register.C)],
  0x72: ["BIT 6,D", bia(testBitInRegister, 6, Register.D)],
  0x73: ["BIT 6,E", bia(testBitInRegister, 6, Register.E)],
  0x74: ["BIT 6,H", bia(testBitInRegister, 6, Register.H)],
  0x75: ["BIT 6,L", bia(testBitInRegister, 6, Register.L)],
  0x76: ["BIT 6,(HL)", bia(testBitInIndirectHL, 6)],
  0x77: ["BIT 6,A", bia(testBitInRegister, 6, Register.A)],
  0x78: ["BIT 7,B", bia(testBitInRegister, 7, Register.B)],
  0x79: ["BIT 7,C", bia(testBitInRegister, 7, Register.C)],
  0x7a: ["BIT 7,D", bia(testBitInRegister, 7, Register.D)],
  0x7b: ["BIT 7,E", bia(testBitInRegister, 7, Register.E)],
  0x7c: ["BIT 7,H", bia(testBitInRegister, 7, Register.H)],
  0x7d: ["BIT 7,L", bia(testBitInRegister, 7, Register.L)],
  0x7e: ["BIT 7,(HL)", bia(testBitInIndirectHL, 7)],
  0x7f: ["BIT 7,A", bia(testBitInRegister, 7, Register.A)],

  0x80: ["RES 0,B", bia(resetBitInRegister, 0, Register.B)],
  0x81: ["RES 0,C", bia(resetBitInRegister, 0, Register.C)],
  0x82: ["RES 0,D", bia(resetBitInRegister, 0, Register.D)],
  0x83: ["RES 0,E", bia(resetBitInRegister, 0, Register.E)],
  0x84: ["RES 0,H", bia(resetBitInRegister, 0, Register.H)],
  0x85: ["RES 0,L", bia(resetBitInRegister, 0, Register.L)],
  0x86: ["RES 0,(HL)", bia(resetBitInIndirectHL, 0)],
  0x87: ["RES 0,A", bia(resetBitInRegister, 0, Register.A)],
  0x88: ["RES 1,B", bia(resetBitInRegister, 1, Register.B)],
  0x89: ["RES 1,C", bia(resetBitInRegister, 1, Register.C)],
  0x8a: ["RES 1,D", bia(resetBitInRegister, 1, Register.D)],
  0x8b: ["RES 1,E", bia(resetBitInRegister, 1, Register.E)],
  0x8c: ["RES 1,H", bia(resetBitInRegister, 1, Register.H)],
  0x8d: ["RES 1,L", bia(resetBitInRegister, 1, Register.L)],
  0x8e: ["RES 1,(HL)", bia(resetBitInIndirectHL, 1)],
  0x8f: ["RES 1,A", bia(resetBitInRegister, 1, Register.A)],

  0x90: ["RES 2,B", bia(resetBitInRegister, 2, Register.B)],
  0x91: ["RES 2,C", bia(resetBitInRegister, 2, Register.C)],
  0x92: ["RES 2,D", bia(resetBitInRegister, 2, Register.D)],
  0x93: ["RES 2,E", bia(resetBitInRegister, 2, Register.E)],
  0x94: ["RES 2,H", bia(resetBitInRegister, 2, Register.H)],
  0x95: ["RES 2,L", bia(resetBitInRegister, 2, Register.L)],
  0x96: ["RES 2,(HL)", bia(resetBitInIndirectHL, 2)],
  0x97: ["RES 2,A", bia(resetBitInRegister, 2, Register.A)],
  0x98: ["RES 3,B", bia(resetBitInRegister, 3, Register.B)],
  0x99: ["RES 3,C", bia(resetBitInRegister, 3, Register.C)],
  0x9a: ["RES 3,D", bia(resetBitInRegister, 3, Register.D)],
  0x9b: ["RES 3,E", bia(resetBitInRegister, 3, Register.E)],
  0x9c: ["RES 3,H", bia(resetBitInRegister, 3, Register.H)],
  0x9d: ["RES 3,L", bia(resetBitInRegister, 3, Register.L)],
  0x9e: ["RES 3,(HL)", bia(resetBitInIndirectHL, 3)],
  0x9f: ["RES 3,A", bia(resetBitInRegister, 3, Register.A)],

  0xa0: ["RES 4,B", bia(resetBitInRegister, 4, Register.B)],
  0xa1: ["RES 4,C", bia(resetBitInRegister, 4, Register.C)],
  0xa2: ["RES 4,D", bia(resetBitInRegister, 4, Register.D)],
  0xa3: ["RES 4,E", bia(resetBitInRegister, 4, Register.E)],
  0xa4: ["RES 4,H", bia(resetBitInRegister, 4, Register.H)],
  0xa5: ["RES 4,L", bia(resetBitInRegister, 4, Register.L)],
  0xa6: ["RES 4,(HL)", bia(resetBitInIndirectHL, 4)],
  0xa7: ["RES 4,A", bia(resetBitInRegister, 4, Register.A)],
  0xa8: ["RES 5,B", bia(resetBitInRegister, 5, Register.B)],
  0xa9: ["RES 5,C", bia(resetBitInRegister, 5, Register.C)],
  0xaa: ["RES 5,D", bia(resetBitInRegister, 5, Register.D)],
  0xab: ["RES 5,E", bia(resetBitInRegister, 5, Register.E)],
  0xac: ["RES 5,H", bia(resetBitInRegister, 5, Register.H)],
  0xad: ["RES 5,L", bia(resetBitInRegister, 5, Register.L)],
  0xae: ["RES 5,(HL)", bia(resetBitInIndirectHL, 5)],
  0xaf: ["RES 5,A", bia(resetBitInRegister, 5, Register.A)],

  0xb0: ["RES 6,B", bia(resetBitInRegister, 6, Register.B)],
  0xb1: ["RES 6,C", bia(resetBitInRegister, 6, Register.C)],
  0xb2: ["RES 6,D", bia(resetBitInRegister, 6, Register.D)],
  0xb3: ["RES 6,E", bia(resetBitInRegister, 6, Register.E)],
  0xb4: ["RES 6,H", bia(resetBitInRegister, 6, Register.H)],
  0xb5: ["RES 6,L", bia(resetBitInRegister, 6, Register.L)],
  0xb6: ["RES 6,(HL)", bia(resetBitInIndirectHL, 6)],
  0xb7: ["RES 6,A", bia(resetBitInRegister, 6, Register.A)],
  0xb8: ["RES 7,B", bia(resetBitInRegister, 7, Register.B)],
  0xb9: ["RES 7,C", bia(resetBitInRegister, 7, Register.C)],
  0xba: ["RES 7,D", bia(resetBitInRegister, 7, Register.D)],
  0xbb: ["RES 7,E", bia(resetBitInRegister, 7, Register.E)],
  0xbc: ["RES 7,H", bia(resetBitInRegister, 7, Register.H)],
  0xbd: ["RES 7,L", bia(resetBitInRegister, 7, Register.L)],
  0xbe: ["RES 7,(HL)", bia(resetBitInIndirectHL, 7)],
  0xbf: ["RES 7,A", bia(resetBitInRegister, 7, Register.A)],

  0xc0: ["SET 0,B", bia(setBitInRegister, 0, Register.B)],
  0xc1: ["SET 0,C", bia(setBitInRegister, 0, Register.C)],
  0xc2: ["SET 0,D", bia(setBitInRegister, 0, Register.D)],
  0xc3: ["SET 0,E", bia(setBitInRegister, 0, Register.E)],
  0xc4: ["SET 0,H", bia(setBitInRegister, 0, Register.H)],
  0xc5: ["SET 0,L", bia(setBitInRegister, 0, Register.L)],
  0xc6: ["SET 0,(HL)", bia(setBitInIndirectHL, 0)],
  0xc7: ["SET 0,A", bia(setBitInRegister, 0, Register.A)],
  0xc8: ["SET 1,B", bia(setBitInRegister, 1, Register.B)],
  0xc9: ["SET 1,C", bia(setBitInRegister, 1, Register.C)],
  0xca: ["SET 1,D", bia(setBitInRegister, 1, Register.D)],
  0xcb: ["SET 1,E", bia(setBitInRegister, 1, Register.E)],
  0xcc: ["SET 1,H", bia(setBitInRegister, 1, Register.H)],
  0xcd: ["SET 1,L", bia(setBitInRegister, 1, Register.L)],
  0xce: ["SET 1,(HL)", bia(setBitInIndirectHL, 1)],
  0xcf: ["SET 1,A", bia(setBitInRegister, 1, Register.A)],

  0xd0: ["SET 2,B", bia(setBitInRegister, 2, Register.B)],
  0xd1: ["SET 2,C", bia(setBitInRegister, 2, Register.C)],
  0xd2: ["SET 2,D", bia(setBitInRegister, 2, Register.D)],
  0xd3: ["SET 2,E", bia(setBitInRegister, 2, Register.E)],
  0xd4: ["SET 2,H", bia(setBitInRegister, 2, Register.H)],
  0xd5: ["SET 2,L", bia(setBitInRegister, 2, Register.L)],
  0xd6: ["SET 2,(HL)", bia(setBitInIndirectHL, 2)],
  0xd7: ["SET 2,A", bia(setBitInRegister, 2, Register.A)],
  0xd8: ["SET 3,B", bia(setBitInRegister, 3, Register.B)],
  0xd9: ["SET 3,C", bia(setBitInRegister, 3, Register.C)],
  0xda: ["SET 3,D", bia(setBitInRegister, 3, Register.D)],
  0xdb: ["SET 3,E", bia(setBitInRegister, 3, Register.E)],
  0xdc: ["SET 3,H", bia(setBitInRegister, 3, Register.H)],
  0xdd: ["SET 3,L", bia(setBitInRegister, 3, Register.L)],
  0xde: ["SET 3,(HL)", bia(setBitInIndirectHL, 3)],
  0xdf: ["SET 3,A", bia(setBitInRegister, 3, Register.A)],

  0xe0: ["SET 4,B", bia(setBitInRegister, 4, Register.B)],
  0xe1: ["SET 4,C", bia(setBitInRegister, 4, Register.C)],
  0xe2: ["SET 4,D", bia(setBitInRegister, 4, Register.D)],
  0xe3: ["SET 4,E", bia(setBitInRegister, 4, Register.E)],
  0xe4: ["SET 4,H", bia(setBitInRegister, 4, Register.H)],
  0xe5: ["SET 4,L", bia(setBitInRegister, 4, Register.L)],
  0xe6: ["SET 4,(HL)", bia(setBitInIndirectHL, 4)],
  0xe7: ["SET 4,A", bia(setBitInRegister, 4, Register.A)],
  0xe8: ["SET 5,B", bia(setBitInRegister, 5, Register.B)],
  0xe9: ["SET 5,C", bia(setBitInRegister, 5, Register.C)],
  0xea: ["SET 5,D", bia(setBitInRegister, 5, Register.D)],
  0xeb: ["SET 5,E", bia(setBitInRegister, 5, Register.E)],
  0xec: ["SET 5,H", bia(setBitInRegister, 5, Register.H)],
  0xed: ["SET 5,L", bia(setBitInRegister, 5, Register.L)],
  0xee: ["SET 5,(HL)", bia(setBitInIndirectHL, 5)],
  0xef: ["SET 5,A", bia(setBitInRegister, 5, Register.A)],

  0xf0: ["SET 6,B", bia(setBitInRegister, 6, Register.B)],
  0xf1: ["SET 6,C", bia(setBitInRegister, 6, Register.C)],
  0xf2: ["SET 6,D", bia(setBitInRegister, 6, Register.D)],
  0xf3: ["SET 6,E", bia(setBitInRegister, 6, Register.E)],
  0xf4: ["SET 6,H", bia(setBitInRegister, 6, Register.H)],
  0xf5: ["SET 6,L", bia(setBitInRegister, 6, Register.L)],
  0xf6: ["SET 6,(HL)", bia(setBitInIndirectHL, 6)],
  0xf7: ["SET 6,A", bia(setBitInRegister, 6, Register.A)],
  0xf8: ["SET 7,B", bia(setBitInRegister, 7, Register.B)],
  0xf9: ["SET 7,C", bia(setBitInRegister, 7, Register.C)],
  0xfa: ["SET 7,D", bia(setBitInRegister, 7, Register.D)],
  0xfb: ["SET 7,E", bia(setBitInRegister, 7, Register.E)],
  0xfc: ["SET 7,H", bia(setBitInRegister, 7, Register.H)],
  0xfd: ["SET 7,L", bia(setBitInRegister, 7, Register.L)],
  0xfe: ["SET 7,(HL)", bia(setBitInIndirectHL, 7)],
  0xff: ["SET 7,A", bia(setBitInRegister, 7, Register.A)],
};
