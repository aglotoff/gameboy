import { InstructionContext } from "../cpu-state";
import { Register } from "../register";

import {
  resetBitInIndirectHL,
  resetBitInRegister,
  rotateIndirectHLLeft,
  rotateRegisterLeft,
  rotateIndirectHLLeftThroughCarry,
  rotateRegisterLeftThroughCarry,
  rotateIndirectHLRight,
  rotateRegisterRight,
  rotateIndirectHLRightThroughCarry,
  rotateRegisterRightThroughCarry,
  setBitInIndirectHL,
  setBitInRegister,
  shiftLeftArithmeticallyIndirectHL,
  shiftLeftArithmeticallyRegister,
  shiftRightArithmeticallyIndirectHL,
  shiftRightArithmeticallyRegister,
  shiftRightLogicallyIndirectHL,
  shiftRightLogicallyRegister,
  swapNibblesInIndirectHL,
  swapNibblesInRegister,
  testBitInIndirectHL,
  testBitInRegister,
} from "./bitwise";
import { bindInstructionArgs as bia, fetchImmediateByte, OpTable } from "./lib";

export const prefixCBInstruction = (ctx: InstructionContext) => {
  const opcode = fetchImmediateByte(ctx);
  prefixCBInstructions[opcode](ctx);
};

const prefixCBInstructions: OpTable = [
  /* 0x00 */ bia(rotateRegisterLeft, Register.B),
  /* 0x01 */ bia(rotateRegisterLeft, Register.C),
  /* 0x02 */ bia(rotateRegisterLeft, Register.D),
  /* 0x03 */ bia(rotateRegisterLeft, Register.E),
  /* 0x04 */ bia(rotateRegisterLeft, Register.H),
  /* 0x05 */ bia(rotateRegisterLeft, Register.L),
  /* 0x06 */ rotateIndirectHLLeft,
  /* 0x07 */ bia(rotateRegisterLeft, Register.A),
  /* 0x08 */ bia(rotateRegisterRight, Register.B),
  /* 0x09 */ bia(rotateRegisterRight, Register.C),
  /* 0x0a */ bia(rotateRegisterRight, Register.D),
  /* 0x0b */ bia(rotateRegisterRight, Register.E),
  /* 0x0c */ bia(rotateRegisterRight, Register.H),
  /* 0x0d */ bia(rotateRegisterRight, Register.L),
  /* 0x0e */ rotateIndirectHLRight,
  /* 0x0f */ bia(rotateRegisterRight, Register.A),

  /* 0x10 */ bia(rotateRegisterLeftThroughCarry, Register.B),
  /* 0x11 */ bia(rotateRegisterLeftThroughCarry, Register.C),
  /* 0x12 */ bia(rotateRegisterLeftThroughCarry, Register.D),
  /* 0x13 */ bia(rotateRegisterLeftThroughCarry, Register.E),
  /* 0x14 */ bia(rotateRegisterLeftThroughCarry, Register.H),
  /* 0x15 */ bia(rotateRegisterLeftThroughCarry, Register.L),
  /* 0x16 */ rotateIndirectHLLeftThroughCarry,
  /* 0x17 */ bia(rotateRegisterLeftThroughCarry, Register.A),
  /* 0x18 */ bia(rotateRegisterRightThroughCarry, Register.B),
  /* 0x19 */ bia(rotateRegisterRightThroughCarry, Register.C),
  /* 0x1a */ bia(rotateRegisterRightThroughCarry, Register.D),
  /* 0x1b */ bia(rotateRegisterRightThroughCarry, Register.E),
  /* 0x1c */ bia(rotateRegisterRightThroughCarry, Register.H),
  /* 0x1d */ bia(rotateRegisterRightThroughCarry, Register.L),
  /* 0x1e */ rotateIndirectHLRightThroughCarry,
  /* 0x1f */ bia(rotateRegisterRightThroughCarry, Register.A),

  /* 0x20 */ bia(shiftLeftArithmeticallyRegister, Register.B),
  /* 0x21 */ bia(shiftLeftArithmeticallyRegister, Register.C),
  /* 0x22 */ bia(shiftLeftArithmeticallyRegister, Register.D),
  /* 0x23 */ bia(shiftLeftArithmeticallyRegister, Register.E),
  /* 0x24 */ bia(shiftLeftArithmeticallyRegister, Register.H),
  /* 0x25 */ bia(shiftLeftArithmeticallyRegister, Register.L),
  /* 0x26 */ shiftLeftArithmeticallyIndirectHL,
  /* 0x27 */ bia(shiftLeftArithmeticallyRegister, Register.A),
  /* 0x28 */ bia(shiftRightArithmeticallyRegister, Register.B),
  /* 0x29 */ bia(shiftRightArithmeticallyRegister, Register.C),
  /* 0x2a */ bia(shiftRightArithmeticallyRegister, Register.D),
  /* 0x2b */ bia(shiftRightArithmeticallyRegister, Register.E),
  /* 0x2c */ bia(shiftRightArithmeticallyRegister, Register.H),
  /* 0x2d */ bia(shiftRightArithmeticallyRegister, Register.L),
  /* 0x2e */ shiftRightArithmeticallyIndirectHL,
  /* 0x2f */ bia(shiftRightArithmeticallyRegister, Register.A),

  /* 0x30 */ bia(swapNibblesInRegister, Register.B),
  /* 0x31 */ bia(swapNibblesInRegister, Register.C),
  /* 0x32 */ bia(swapNibblesInRegister, Register.D),
  /* 0x33 */ bia(swapNibblesInRegister, Register.E),
  /* 0x34 */ bia(swapNibblesInRegister, Register.H),
  /* 0x35 */ bia(swapNibblesInRegister, Register.L),
  /* 0x36 */ swapNibblesInIndirectHL,
  /* 0x37 */ bia(swapNibblesInRegister, Register.A),
  /* 0x38 */ bia(shiftRightLogicallyRegister, Register.B),
  /* 0x39 */ bia(shiftRightLogicallyRegister, Register.C),
  /* 0x3a */ bia(shiftRightLogicallyRegister, Register.D),
  /* 0x3b */ bia(shiftRightLogicallyRegister, Register.E),
  /* 0x3c */ bia(shiftRightLogicallyRegister, Register.H),
  /* 0x3d */ bia(shiftRightLogicallyRegister, Register.L),
  /* 0x3e */ shiftRightLogicallyIndirectHL,
  /* 0x3f */ bia(shiftRightLogicallyRegister, Register.A),

  /* 0x40 */ bia(testBitInRegister, 0, Register.B),
  /* 0x41 */ bia(testBitInRegister, 0, Register.C),
  /* 0x42 */ bia(testBitInRegister, 0, Register.D),
  /* 0x43 */ bia(testBitInRegister, 0, Register.E),
  /* 0x44 */ bia(testBitInRegister, 0, Register.H),
  /* 0x45 */ bia(testBitInRegister, 0, Register.L),
  /* 0x46 */ bia(testBitInIndirectHL, 0),
  /* 0x47 */ bia(testBitInRegister, 0, Register.A),
  /* 0x48 */ bia(testBitInRegister, 1, Register.B),
  /* 0x49 */ bia(testBitInRegister, 1, Register.C),
  /* 0x4a */ bia(testBitInRegister, 1, Register.D),
  /* 0x4b */ bia(testBitInRegister, 1, Register.E),
  /* 0x4c */ bia(testBitInRegister, 1, Register.H),
  /* 0x4d */ bia(testBitInRegister, 1, Register.L),
  /* 0x4e */ bia(testBitInIndirectHL, 1),
  /* 0x4f */ bia(testBitInRegister, 1, Register.A),

  /* 0x50 */ bia(testBitInRegister, 2, Register.B),
  /* 0x51 */ bia(testBitInRegister, 2, Register.C),
  /* 0x52 */ bia(testBitInRegister, 2, Register.D),
  /* 0x53 */ bia(testBitInRegister, 2, Register.E),
  /* 0x54 */ bia(testBitInRegister, 2, Register.H),
  /* 0x55 */ bia(testBitInRegister, 2, Register.L),
  /* 0x56 */ bia(testBitInIndirectHL, 2),
  /* 0x57 */ bia(testBitInRegister, 2, Register.A),
  /* 0x58 */ bia(testBitInRegister, 3, Register.B),
  /* 0x59 */ bia(testBitInRegister, 3, Register.C),
  /* 0x5a */ bia(testBitInRegister, 3, Register.D),
  /* 0x5b */ bia(testBitInRegister, 3, Register.E),
  /* 0x5c */ bia(testBitInRegister, 3, Register.H),
  /* 0x5d */ bia(testBitInRegister, 3, Register.L),
  /* 0x5e */ bia(testBitInIndirectHL, 3),
  /* 0x5f */ bia(testBitInRegister, 3, Register.A),

  /* 0x60 */ bia(testBitInRegister, 4, Register.B),
  /* 0x61 */ bia(testBitInRegister, 4, Register.C),
  /* 0x62 */ bia(testBitInRegister, 4, Register.D),
  /* 0x63 */ bia(testBitInRegister, 4, Register.E),
  /* 0x64 */ bia(testBitInRegister, 4, Register.H),
  /* 0x65 */ bia(testBitInRegister, 4, Register.L),
  /* 0x66 */ bia(testBitInIndirectHL, 4),
  /* 0x67 */ bia(testBitInRegister, 4, Register.A),
  /* 0x68 */ bia(testBitInRegister, 5, Register.B),
  /* 0x69 */ bia(testBitInRegister, 5, Register.C),
  /* 0x6a */ bia(testBitInRegister, 5, Register.D),
  /* 0x6b */ bia(testBitInRegister, 5, Register.E),
  /* 0x6c */ bia(testBitInRegister, 5, Register.H),
  /* 0x6d */ bia(testBitInRegister, 5, Register.L),
  /* 0x6e */ bia(testBitInIndirectHL, 5),
  /* 0x6f */ bia(testBitInRegister, 5, Register.A),

  /* 0x70 */ bia(testBitInRegister, 6, Register.B),
  /* 0x71 */ bia(testBitInRegister, 6, Register.C),
  /* 0x72 */ bia(testBitInRegister, 6, Register.D),
  /* 0x73 */ bia(testBitInRegister, 6, Register.E),
  /* 0x74 */ bia(testBitInRegister, 6, Register.H),
  /* 0x75 */ bia(testBitInRegister, 6, Register.L),
  /* 0x76 */ bia(testBitInIndirectHL, 6),
  /* 0x77 */ bia(testBitInRegister, 6, Register.A),
  /* 0x78 */ bia(testBitInRegister, 7, Register.B),
  /* 0x79 */ bia(testBitInRegister, 7, Register.C),
  /* 0x7a */ bia(testBitInRegister, 7, Register.D),
  /* 0x7b */ bia(testBitInRegister, 7, Register.E),
  /* 0x7c */ bia(testBitInRegister, 7, Register.H),
  /* 0x7d */ bia(testBitInRegister, 7, Register.L),
  /* 0x7e */ bia(testBitInIndirectHL, 7),
  /* 0x7f */ bia(testBitInRegister, 7, Register.A),

  /* 0x80 */ bia(resetBitInRegister, 0, Register.B),
  /* 0x81 */ bia(resetBitInRegister, 0, Register.C),
  /* 0x82 */ bia(resetBitInRegister, 0, Register.D),
  /* 0x83 */ bia(resetBitInRegister, 0, Register.E),
  /* 0x84 */ bia(resetBitInRegister, 0, Register.H),
  /* 0x85 */ bia(resetBitInRegister, 0, Register.L),
  /* 0x86 */ bia(resetBitInIndirectHL, 0),
  /* 0x87 */ bia(resetBitInRegister, 0, Register.A),
  /* 0x88 */ bia(resetBitInRegister, 1, Register.B),
  /* 0x89 */ bia(resetBitInRegister, 1, Register.C),
  /* 0x8a */ bia(resetBitInRegister, 1, Register.D),
  /* 0x8b */ bia(resetBitInRegister, 1, Register.E),
  /* 0x8c */ bia(resetBitInRegister, 1, Register.H),
  /* 0x8d */ bia(resetBitInRegister, 1, Register.L),
  /* 0x8e */ bia(resetBitInIndirectHL, 1),
  /* 0x8f */ bia(resetBitInRegister, 1, Register.A),

  /* 0x90 */ bia(resetBitInRegister, 2, Register.B),
  /* 0x91 */ bia(resetBitInRegister, 2, Register.C),
  /* 0x92 */ bia(resetBitInRegister, 2, Register.D),
  /* 0x93 */ bia(resetBitInRegister, 2, Register.E),
  /* 0x94 */ bia(resetBitInRegister, 2, Register.H),
  /* 0x95 */ bia(resetBitInRegister, 2, Register.L),
  /* 0x96 */ bia(resetBitInIndirectHL, 2),
  /* 0x97 */ bia(resetBitInRegister, 2, Register.A),
  /* 0x98 */ bia(resetBitInRegister, 3, Register.B),
  /* 0x99 */ bia(resetBitInRegister, 3, Register.C),
  /* 0x9a */ bia(resetBitInRegister, 3, Register.D),
  /* 0x9b */ bia(resetBitInRegister, 3, Register.E),
  /* 0x9c */ bia(resetBitInRegister, 3, Register.H),
  /* 0x9d */ bia(resetBitInRegister, 3, Register.L),
  /* 0x9e */ bia(resetBitInIndirectHL, 3),
  /* 0x9f */ bia(resetBitInRegister, 3, Register.A),

  /* 0xa0 */ bia(resetBitInRegister, 4, Register.B),
  /* 0xa1 */ bia(resetBitInRegister, 4, Register.C),
  /* 0xa2 */ bia(resetBitInRegister, 4, Register.D),
  /* 0xa3 */ bia(resetBitInRegister, 4, Register.E),
  /* 0xa4 */ bia(resetBitInRegister, 4, Register.H),
  /* 0xa5 */ bia(resetBitInRegister, 4, Register.L),
  /* 0xa6 */ bia(resetBitInIndirectHL, 4),
  /* 0xa7 */ bia(resetBitInRegister, 4, Register.A),
  /* 0xa8 */ bia(resetBitInRegister, 5, Register.B),
  /* 0xa9 */ bia(resetBitInRegister, 5, Register.C),
  /* 0xaa */ bia(resetBitInRegister, 5, Register.D),
  /* 0xab */ bia(resetBitInRegister, 5, Register.E),
  /* 0xac */ bia(resetBitInRegister, 5, Register.H),
  /* 0xad */ bia(resetBitInRegister, 5, Register.L),
  /* 0xae */ bia(resetBitInIndirectHL, 5),
  /* 0xaf */ bia(resetBitInRegister, 5, Register.A),

  /* 0xb0 */ bia(resetBitInRegister, 6, Register.B),
  /* 0xb1 */ bia(resetBitInRegister, 6, Register.C),
  /* 0xb2 */ bia(resetBitInRegister, 6, Register.D),
  /* 0xb3 */ bia(resetBitInRegister, 6, Register.E),
  /* 0xb4 */ bia(resetBitInRegister, 6, Register.H),
  /* 0xb5 */ bia(resetBitInRegister, 6, Register.L),
  /* 0xb6 */ bia(resetBitInIndirectHL, 6),
  /* 0xb7 */ bia(resetBitInRegister, 6, Register.A),
  /* 0xb8 */ bia(resetBitInRegister, 7, Register.B),
  /* 0xb9 */ bia(resetBitInRegister, 7, Register.C),
  /* 0xba */ bia(resetBitInRegister, 7, Register.D),
  /* 0xbb */ bia(resetBitInRegister, 7, Register.E),
  /* 0xbc */ bia(resetBitInRegister, 7, Register.H),
  /* 0xbd */ bia(resetBitInRegister, 7, Register.L),
  /* 0xbe */ bia(resetBitInIndirectHL, 7),
  /* 0xbf */ bia(resetBitInRegister, 7, Register.A),

  /* 0xc0 */ bia(setBitInRegister, 0, Register.B),
  /* 0xc1 */ bia(setBitInRegister, 0, Register.C),
  /* 0xc2 */ bia(setBitInRegister, 0, Register.D),
  /* 0xc3 */ bia(setBitInRegister, 0, Register.E),
  /* 0xc4 */ bia(setBitInRegister, 0, Register.H),
  /* 0xc5 */ bia(setBitInRegister, 0, Register.L),
  /* 0xc6 */ bia(setBitInIndirectHL, 0),
  /* 0xc7 */ bia(setBitInRegister, 0, Register.A),
  /* 0xc8 */ bia(setBitInRegister, 1, Register.B),
  /* 0xc9 */ bia(setBitInRegister, 1, Register.C),
  /* 0xca */ bia(setBitInRegister, 1, Register.D),
  /* 0xcb */ bia(setBitInRegister, 1, Register.E),
  /* 0xcc */ bia(setBitInRegister, 1, Register.H),
  /* 0xcd */ bia(setBitInRegister, 1, Register.L),
  /* 0xce */ bia(setBitInIndirectHL, 1),
  /* 0xcf */ bia(setBitInRegister, 1, Register.A),

  /* 0xd0 */ bia(setBitInRegister, 2, Register.B),
  /* 0xd1 */ bia(setBitInRegister, 2, Register.C),
  /* 0xd2 */ bia(setBitInRegister, 2, Register.D),
  /* 0xd3 */ bia(setBitInRegister, 2, Register.E),
  /* 0xd4 */ bia(setBitInRegister, 2, Register.H),
  /* 0xd5 */ bia(setBitInRegister, 2, Register.L),
  /* 0xd6 */ bia(setBitInIndirectHL, 2),
  /* 0xd7 */ bia(setBitInRegister, 2, Register.A),
  /* 0xd8 */ bia(setBitInRegister, 3, Register.B),
  /* 0xd9 */ bia(setBitInRegister, 3, Register.C),
  /* 0xda */ bia(setBitInRegister, 3, Register.D),
  /* 0xdb */ bia(setBitInRegister, 3, Register.E),
  /* 0xdc */ bia(setBitInRegister, 3, Register.H),
  /* 0xdd */ bia(setBitInRegister, 3, Register.L),
  /* 0xde */ bia(setBitInIndirectHL, 3),
  /* 0xdf */ bia(setBitInRegister, 3, Register.A),

  /* 0xe0 */ bia(setBitInRegister, 4, Register.B),
  /* 0xe1 */ bia(setBitInRegister, 4, Register.C),
  /* 0xe2 */ bia(setBitInRegister, 4, Register.D),
  /* 0xe3 */ bia(setBitInRegister, 4, Register.E),
  /* 0xe4 */ bia(setBitInRegister, 4, Register.H),
  /* 0xe5 */ bia(setBitInRegister, 4, Register.L),
  /* 0xe6 */ bia(setBitInIndirectHL, 4),
  /* 0xe7 */ bia(setBitInRegister, 4, Register.A),
  /* 0xe8 */ bia(setBitInRegister, 5, Register.B),
  /* 0xe9 */ bia(setBitInRegister, 5, Register.C),
  /* 0xea */ bia(setBitInRegister, 5, Register.D),
  /* 0xeb */ bia(setBitInRegister, 5, Register.E),
  /* 0xec */ bia(setBitInRegister, 5, Register.H),
  /* 0xed */ bia(setBitInRegister, 5, Register.L),
  /* 0xee */ bia(setBitInIndirectHL, 5),
  /* 0xef */ bia(setBitInRegister, 5, Register.A),

  /* 0xf0 */ bia(setBitInRegister, 6, Register.B),
  /* 0xf1 */ bia(setBitInRegister, 6, Register.C),
  /* 0xf2 */ bia(setBitInRegister, 6, Register.D),
  /* 0xf3 */ bia(setBitInRegister, 6, Register.E),
  /* 0xf4 */ bia(setBitInRegister, 6, Register.H),
  /* 0xf5 */ bia(setBitInRegister, 6, Register.L),
  /* 0xf6 */ bia(setBitInIndirectHL, 6),
  /* 0xf7 */ bia(setBitInRegister, 6, Register.A),
  /* 0xf8 */ bia(setBitInRegister, 7, Register.B),
  /* 0xf9 */ bia(setBitInRegister, 7, Register.C),
  /* 0xfa */ bia(setBitInRegister, 7, Register.D),
  /* 0xfb */ bia(setBitInRegister, 7, Register.E),
  /* 0xfc */ bia(setBitInRegister, 7, Register.H),
  /* 0xfd */ bia(setBitInRegister, 7, Register.L),
  /* 0xfe */ bia(setBitInIndirectHL, 7),
  /* 0xff */ bia(setBitInRegister, 7, Register.A),
];
